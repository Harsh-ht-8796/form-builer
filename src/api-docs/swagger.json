{
  "openapi": "3.0.3",
  "info": {
    "title": "Form API",
    "description": "API for creating and managing forms",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "tokens": {
            "$ref": "#/components/schemas/Tokens"
          }
        }
      },
      "Form": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            }
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "settings": {
            "$ref": "#/components/schemas/FormSettings"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "published",
              "all"
            ]
          },
          "coverImage": {
            "type": "string"
          },
          "logoImage": {
            "type": "string"
          },
          "__v": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ]
      },
      "InvitedUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "super_admin"
            }
          }
        },
        "required": [
          "email",
          "roles"
        ]
      },
      "FormField": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the field"
          },
          "type": {
            "type": "string",
            "enum": [
              "short-text",
              "long-text",
              "multiple-choice",
              "dropdown",
              "checkbox"
            ]
          },
          "fieldType": {
            "type": "string",
            "enum": [
              "checkbox",
              "radio",
              "select",
              "textarea",
              "text"
            ],
            "description": "Type of the form field"
          },
          "title": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "order": {
            "type": "integer"
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "FormSettings": {
        "type": "object",
        "properties": {
          "visibility": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "headerImage": {
            "type": "string"
          },
          "emailNotifications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "totalDocs": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        }
      },
      "FormRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the form"
          },
          "description": {
            "type": "string",
            "description": "Description of the form"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "description": "List of form fields"
          },
          "settings": {
            "$ref": "#/components/schemas/FormSettings"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "published",
              "archived"
            ],
            "description": "Status of the form"
          }
        }
      },
      "FormResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Form ID"
          },
          "createdBy": {
            "type": "string",
            "description": "ID of the user who created the form"
          },
          "title": {
            "type": "string",
            "description": "Title of the form"
          },
          "description": {
            "type": "string",
            "description": "Description of the form"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of allowed domains"
          },
          "alowedEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "List of allowed email addresses"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Field ID"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the form field"
                },
                "title": {
                  "type": "string",
                  "description": "Label for the form field"
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Options for SelectBox type field"
                },
                "position": {
                  "type": "integer",
                  "description": "Position of the field in the form"
                },
                "required": {
                  "type": "boolean",
                  "description": "Whether the field is required"
                }
              }
            },
            "description": "List of form fields"
          },
          "order": {
            "type": "integer"
          },
          "settings": {
            "type": "object",
            "properties": {
              "visibility": {
                "type": "string",
                "description": "Visibility settings for the form"
              },
              "backgroundColor": {
                "type": "string",
                "description": "Background color in hex format"
              },
              "emailNotifications": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "description": "Email addresses for notifications"
              }
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the form"
          },
          "__v": {
            "type": "integer",
            "description": "Version key"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "v8@yopmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Test@123"
          },
          "username": {
            "type": "string",
            "example": "john2"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "super_admin"
            }
          }
        },
        "required": [
          "email",
          "password",
          "username",
          "roles"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "689b4059fdd7aeff7cace044"
          },
          "id": {
            "type": "string",
            "example": "689b4059fdd7aeff7cace044"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "feboj43260@gufutu.com"
          },
          "username": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          },
          "orgId": {
            "type": "string",
            "example": "6874e0e894418fbbe607bce2"
          },
          "isEmailVerified": {
            "type": "boolean",
            "example": false
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "super_admin"
            }
          },
          "__v": {
            "type": "integer",
            "example": 0
          },
          "createdAt": {
            "type": "string",
            "example": "12-08-2025"
          },
          "updatedAt": {
            "type": "string",
            "example": "12-08-2025"
          }
        }
      },
      "UsersByOrgResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "object",
            "properties": {
              "docs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "meta": {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            }
          }
        }
      },
      "AccessToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "ACCESS_TOKEN_JWT_STRING"
          },
          "expires": {
            "type": "integer",
            "example": 1754924963
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "REFRESH_TOKEN_JWT_STRING"
          },
          "expire": {
            "type": "integer",
            "example": 1757513363
          }
        }
      },
      "Tokens": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/AccessToken"
          },
          "refresh": {
            "$ref": "#/components/schemas/RefreshToken"
          }
        }
      },
      "UserInviteRequest": {
        "type": "object",
        "required": [
          "email",
          "roles"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john9.doe@example.com"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "super_admin"
            }
          }
        }
      },
      "UserInviteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User successfully inviated"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "admin"
          },
          "label": {
            "type": "string",
            "example": "Admin"
          }
        }
      },
      "UserRolesResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "DeleteUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User deleted successfully"
          }
        }
      },
      "OrganizationDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "kufyopudre"
          },
          "locality": {
            "type": "string",
            "example": "harshvardhant88@heaptrace.com"
          },
          "createdBy": {
            "type": "string",
            "example": "689afc8b62b3b34c8e69cfea"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-12T08:34:28.625Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-12T08:34:28.625Z"
          },
          "id": {
            "type": "string",
            "example": "689afc9462b3b34c8e69cfef"
          }
        }
      },
      "GetOrganizationByIdResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "kufyopudre"
          },
          "locality": {
            "type": "string",
            "example": "harshvardhant88@heaptrace.com"
          },
          "createdBy": {
            "type": "string",
            "example": "689afc8b62b3b34c8e69cfea"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-12T08:34:28.625Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-12T08:34:28.625Z"
          },
          "id": {
            "type": "string",
            "example": "689afc9462b3b34c8e69cfef"
          }
        }
      },
      "OrganizationUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Acme Corp1"
          },
          "locality": {
            "type": "string",
            "example": "New York1"
          }
        },
        "required": [
          "name",
          "locality"
        ]
      },
      "ReceivedFormOrg": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6874e0e894418fbbe607bce2"
          },
          "name": {
            "type": "string",
            "example": "Acme"
          }
        }
      },
      "ReceivedUser": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6874b6f9ae642cd5c190146f"
          },
          "username": {
            "type": "string",
            "example": "YourName66662222"
          },
          "email": {
            "type": "string",
            "example": "v7@yopmail.com"
          },
          "orgId": {
            "$ref": "#/components/schemas/ReceivedFormOrg"
          }
        }
      },
      "ReceivedForm": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "68a2f03f289425f67c801f18"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ReceivedUser"
          },
          "title": {
            "type": "string",
            "example": "Form Title"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "allowedEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "example": [
              "userA@yopmail.com"
            ]
          },
          "status": {
            "type": "string",
            "example": "published"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "example": "18-08-2025"
          },
          "updatedAt": {
            "type": "string",
            "example": "18-08-2025"
          }
        }
      },
      "ReceivedFormsResponse": {
        "type": "object",
        "properties": {
          "docs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReceivedForm"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "SubmissionsSummaryResponse": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummaryItem"
            }
          }
        },
        "example": {
          "summary": [
            {
              "_id": "68a2f03f289425f67c801f18",
              "responseCount": 3,
              "formId": "68a2f03f289425f67c801f18",
              "formName": "Form Title"
            },
            {
              "_id": "689da44d618fe88d2779c85e",
              "responseCount": 15,
              "formId": "689da44d618fe88d2779c85e",
              "formName": "Form Title"
            },
            {
              "_id": "68a418b753e0a89d7cbfacb8",
              "responseCount": 2,
              "formId": "68a418b753e0a89d7cbfacb8",
              "formName": "Form Title22"
            }
          ]
        }
      },
      "SummaryItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {
              "formId": {
                "type": "string"
              },
              "accessibility": {
                "type": "string"
              }
            }
          },
          "responseCount": {
            "type": "integer",
            "description": "Number of responses received",
            "example": 3
          },
          "formId": {
            "type": "string",
            "description": "Form ID associated with this summary",
            "example": "68a2f03f289425f67c801f18"
          },
          "formName": {
            "type": "string",
            "description": "Name of the form",
            "example": "Form Title"
          }
        }
      },
      "OverviewCard": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Total Forms"
          },
          "value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "example": 6
          },
          "percentage": {
            "type": "string",
            "example": "0.0%"
          },
          "id": {
            "type": "string",
            "example": "total_form"
          }
        },
        "required": [
          "label",
          "value",
          "id"
        ]
      },
      "OverviewCardsResponse": {
        "type": "object",
        "properties": {
          "overviewCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OverviewCard"
            }
          }
        },
        "required": [
          "overviewCards"
        ]
      },
      "Submission": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "68a455f7de6b52c9321049f1"
          },
          "formId": {
            "type": "string",
            "example": "689da44d618fe88d2779c85e"
          },
          "orgId": {
            "type": "string",
            "example": "6874e0e894418fbbe607bce2"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "1755161694558": "Option 2"
            }
          },
          "accessibility": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ],
            "example": "public"
          },
          "submittedBy": {
            "type": "string",
            "example": "6874b6f9ae642cd5c190146f"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-19T10:46:15.659Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-19T10:46:15.659Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-19T10:46:15.659Z"
          },
          "__v": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "SubmissionResponse": {
        "type": "object",
        "properties": {
          "docs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submission"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "GetSubmissionsByFieldResponse": {
        "type": "object",
        "properties": {
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionFieldResponse"
            }
          },
          "field": {
            "$ref": "#/components/schemas/FormField"
          },
          "meta": {
            "$ref": "#/components/schemas/FieldMeta"
          }
        }
      },
      "SubmissionFieldResponse": {
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "string",
            "example": "68a41daa53e0a89d7cbfae3c"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-19T06:46:02.053Z"
          },
          "answer": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Option 2"
            ]
          }
        }
      },
      "FieldMeta": {
        "type": "object",
        "properties": {
          "fieldIndex": {
            "type": "integer",
            "example": 0
          },
          "fieldId": {
            "type": "string",
            "example": "1755584702451"
          },
          "totalSubmissions": {
            "type": "integer",
            "example": 2
          },
          "totalPages": {
            "type": "integer",
            "example": 2
          },
          "page": {
            "type": "integer",
            "example": 0
          },
          "limit": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the field"
          },
          "title": {
            "type": "string",
            "description": "The title of the field"
          },
          "type": {
            "type": "string",
            "enum": [
              "short-text",
              "long-text",
              "multiple-choice",
              "dropdown",
              "checkbox"
            ],
            "description": "The type of the field"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of options (empty for short-text)"
          }
        },
        "required": [
          "id",
          "title",
          "type",
          "options"
        ]
      },
      "Meta": {
        "type": "object",
        "properties": {
          "totalSubmissions": {
            "type": "integer",
            "description": "Total number of submissions"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "description": "Number of results per page"
          }
        },
        "required": [
          "totalSubmissions",
          "totalPages",
          "page",
          "limit"
        ]
      },
      "ShortTextResult": {
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "string",
            "description": "Unique identifier for the submission"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the submission was made"
          },
          "answer": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "question": {
                  "type": "string",
                  "description": "The question text"
                },
                "answer": {
                  "type": "string",
                  "description": "The user's answer"
                },
                "fieldId": {
                  "type": "string",
                  "description": "Unique identifier for the field"
                }
              },
              "required": [
                "question",
                "answer",
                "fieldId"
              ]
            }
          }
        },
        "required": [
          "submissionId",
          "submittedAt",
          "answers"
        ]
      },
      "MultipleChoiceResult": {
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "description": "The multiple-choice option"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier for the user"
                },
                "email": {
                  "type": "string",
                  "description": "User's email"
                }
              },
              "required": [
                "_id",
                "email"
              ]
            },
            "description": "List of users who selected this option"
          }
        },
        "required": [
          "option",
          "users"
        ]
      },
      "FormSubmissionResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ShortTextResult"
                },
                {
                  "$ref": "#/components/schemas/MultipleChoiceResult"
                }
              ]
            },
            "description": "List of submission results, varying by field type"
          },
          "field": {
            "$ref": "#/components/schemas/Field"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "results",
          "field",
          "meta"
        ]
      },
      "DeleteFormImageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Image deleted successfully"
          }
        }
      },
      "DeleteFormImageRequest": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "enum": [
              "cover",
              "logo"
            ]
          }
        },
        "required": [
          "image"
        ]
      }
    }
  },
  "paths": {
    "/api/v1/forms": {
      "post": {
        "summary": "Create a new form",
        "description": "Creates a new form with the specified details",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/forms/{id}": {
      "get": {
        "summary": "Get Form by ID",
        "description": "Get a form by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Form by ID",
        "description": "Delete a form by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Get Form by ID",
        "description": "Get a form by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/forms/{id}/user-view": {
      "get": {
        "summary": "Get Form by ID",
        "description": "Get a form by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/forms/search": {
      "get": {
        "summary": "Search forms",
        "description": "Search forms by status with pagination.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter forms by status (e.g., draft, published)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "published",
                "all"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of forms per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter forms by active status (true/false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Search forms by title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Filter forms created after this date (ISO format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Filter forms created after this date (ISO format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode for sent or draft",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "sent"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Form"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/forms/upload-images/{id}": {
      "post": {
        "summary": "Upload cover and logo images",
        "description": "Uploads one or both images (`coverImage`, `logoImage`) to a form by ID. Accepts multipart/form-data.",
        "tags": [
          "Forms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6874e131f3ccc5a289e7de9b"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "logoImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coverImageUrl": {
                      "type": "string",
                      "example": "/uploads/1754488521261-hbzaai.png"
                    },
                    "coverImageHash": {
                      "type": "string",
                      "example": "501b8bbeb3212286a913c0084c2121a38119acc7daeb24d92e524ff3d5511a85"
                    },
                    "logoImageUrl": {
                      "type": "string",
                      "example": "/uploads/1754488503794-cwe6xl.png"
                    },
                    "logoImageHash": {
                      "type": "string",
                      "example": "501b8bbeb3212286a913c0084c2121a38119acc7daeb24d92e524ff3d5511a85"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No images uploaded or bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account with email, username, password, and roles.",
        "tags": [
          "Auth",
          "Open"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or missing fields"
          }
        }
      }
    },
    "/api/v1/users/roles": {
      "get": {
        "summary": "Get available user roles",
        "responses": {
          "200": {
            "description": "List of available roles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRolesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        }
      }
    },
    "/api/v1/organizations/user-invite": {
      "post": {
        "summary": "Invite users to an organization",
        "description": "Allows an organization admin to invite one or more users by email and assign roles.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InvitedUser"
                    }
                  }
                },
                "required": [
                  "users"
                ]
              },
              "example": {
                "users": [
                  {
                    "email": "john23.doe@example.com",
                    "roles": [
                      "super_admin"
                    ]
                  },
                  {
                    "email": "john24.doe@example.com",
                    "roles": [
                      "super_admin"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Users invited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "users": [
                    {
                      "email": "john23.doe@example.com",
                      "roles": [
                        "super_admin"
                      ]
                    },
                    {
                      "email": "john24.doe@example.com",
                      "roles": [
                        "super_admin"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid email format or missing fields"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/v1/users/by-org": {
      "get": {
        "summary": "Get users by organization",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "feboj43260"
            },
            "description": "Filter users by partial or full email address"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users in the organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersByOrgResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689b3bf20c17e409fbe1919a"
            },
            "description": "The ID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "get": {
        "summary": "Get user details by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689b4059fdd7aeff7cace044"
            },
            "description": "The ID of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get user details by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689b4059fdd7aeff7cace044"
            },
            "description": "The ID of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Get user details by ID",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/organizations": {
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update Organization",
        "description": "Updates the details of an existing organization.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/me": {
      "get": {
        "summary": "Get organization details by ID",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Organization details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "summary": "Get current authenticated user's profile",
        "description": "Returns the profile details of the currently authenticated user.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "username": "YourName5",
                  "email": "v7@yopmail.com",
                  "isEmailVerified": false,
                  "profileUrl": "/uploads/1755070693861-7s4t5o.png",
                  "roles": [
                    "super_admin"
                  ],
                  "createdAt": "2025-07-14T07:51:21.639Z",
                  "updatedAt": "2025-08-13T08:06:19.343Z",
                  "orgId": "6874e0e894418fbbe607bce2",
                  "id": "6874b6f9ae642cd5c190146f"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          }
        }
      }
    },
    "/api/v1/users/upload-images": {
      "post": {
        "summary": "Upload cover and logo images",
        "description": "Uploads one or both images (`coverImage`, `logoImage`) to a form by ID. Accepts multipart/form-data.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profileUrlUrl": {
                      "type": "string",
                      "example": "/uploads/1754488521261-hbzaai.png"
                    },
                    "profileUrlHash": {
                      "type": "string",
                      "example": "501b8bbeb3212286a913c0084c2121a38119acc7daeb24d92e524ff3d5511a85"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No images uploaded or bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/v1/users/delete-profile-image": {
      "delete": {
        "summary": "Delete the user's profile image",
        "description": "Deletes the currently uploaded profile image for the authenticated user.",
        "responses": {
          "200": {
            "description": "Profile image deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profile image deleted successfully"
                    }
                  }
                },
                "example": {
                  "message": "Profile image deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid file or no image found"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/v1/users/change-password": {
      "post": {
        "summary": "Change user password",
        "description": "Allows the authenticated user to change their password by providing the current password and a new password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "example": "New@123"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "Test@123"
                  }
                },
                "required": [
                  "oldPassword",
                  "newPassword"
                ]
              },
              "example": {
                "oldPassword": "New@123",
                "newPassword": "Test@123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                },
                "example": {
                  "message": "Password updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Old password is incorrect or new password doesn't meet requirements"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/v1/forms/{formId}/update-visibility": {
      "put": {
        "summary": "Update form visibility and access settings",
        "description": "Allows updating visibility settings, allowed domains, and allowed emails for a form.",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689c40d66bbfbadb9b80d1a6"
            },
            "description": "Unique ID of the form to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "visibility": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "private",
                        "public",
                        "domain_restricted"
                      ]
                    },
                    "example": [
                      "private",
                      "domain_restricted"
                    ]
                  },
                  "allowedEmails": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "email"
                    },
                    "example": [
                      "abc@gmail.com"
                    ]
                  },
                  "allowedDomains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "example.com"
                    ]
                  }
                },
                "required": [
                  "visibility"
                ]
              },
              "example": {
                "visibility": [
                  "private",
                  "domain_restricted"
                ],
                "allowedEmails": [
                  "abc@gmail.com"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form visibility updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid form ID or data format"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Form not found"
          }
        }
      }
    },
    "/api/v1/forms/{formId}/visibility": {
      "get": {
        "summary": "Get form visibility settings",
        "description": "Retrieves the visibility settings and allowed emails for a specific form.",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6874e12cf3ccc5a289e7de96"
            },
            "description": "Unique ID of the form"
          }
        ],
        "responses": {
          "200": {
            "description": "Form visibility retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "visibility": {
                      "type": "string",
                      "enum": [
                        "public",
                        "private",
                        "domain_restricted"
                      ],
                      "example": "public"
                    },
                    "allowedEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "email"
                      },
                      "example": []
                    }
                  },
                  "required": [
                    "visibility",
                    "allowedEmails"
                  ]
                },
                "example": {
                  "visibility": "public",
                  "allowedEmails": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Form not found"
          }
        }
      }
    },
    "/api/v1/submissions/form/{formId}": {
      "post": {
        "summary": "Submit form data",
        "description": "Allows submission of form responses. The `data` object contains dynamic keys representing field IDs and their corresponding answers.",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689da44d618fe88d2779c85e"
            },
            "description": "Unique ID of the form being submitted"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Dynamic object containing form field IDs as keys and user responses as values",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "example": {
                      "1755161694558": "Option 2"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              },
              "example": {
                "data": {
                  "1755161694558": "Option 2"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form submission successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "1755161694558": "Option 2"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {
                    "1755161694558": "Option 2"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid form data"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Form not found"
          }
        }
      }
    },
    "/api/v1/forms/received": {
      "get": {
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter forms by status (e.g., draft, published)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "published",
                "all"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of forms per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter forms by active status (true/false)",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Search forms by title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Filter forms created after this date (ISO format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Filter forms created after this date (ISO format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "summary": "Get received forms",
        "description": "Returns a list of forms shared with the authenticated user.",
        "responses": {
          "200": {
            "description": "List of received forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivedFormsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/submissions/summary": {
      "get": {
        "summary": "Get submissions summary",
        "description": "Retrieve a summary of submissions filtered by title and accessibility.",
        "tags": [
          "Submissions"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Search submissions by form title",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Form"
            }
          },
          {
            "name": "accessibility",
            "in": "query",
            "description": "Filter by accessibility type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "public",
                "private"
              ],
              "example": "public"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with submission summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionsSummaryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/api/v1/submissions/overview-cards": {
      "get": {
        "summary": "Get overview cards for submissions",
        "description": "Returns key metrics such as total forms, responses, and average completion rate (private).",
        "tags": [
          "Submissions"
        ],
        "responses": {
          "200": {
            "description": "Overview cards retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverviewCardsResponse"
                },
                "example": {
                  "overviewCards": [
                    {
                      "label": "Total Forms",
                      "value": 6,
                      "percentage": "0.0%",
                      "id": "total_form"
                    },
                    {
                      "label": "Total Responses",
                      "value": 4,
                      "percentage": "0.0%",
                      "id": "total_response"
                    },
                    {
                      "label": "Avg. Completion Rate (Private)",
                      "value": "0%",
                      "percentage": "N/A",
                      "id": "avg_completion_rate_private"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          }
        }
      }
    },
    "/api/v1/submissions/{formId}/individual": {
      "get": {
        "summary": "Get individual submissions for a form",
        "tags": [
          "Submissions"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "689da44d618fe88d2779c85e"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of submissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/submissions/form/{formId}/fields": {
      "get": {
        "summary": "Get submissions by form field",
        "description": "Returns submissions for a specific form field, including answers, field details, and pagination metadata.",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The ID of the form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with submissions for the field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubmissionsByFieldResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/submissions/form/{formId}/fields/question": {
      "get": {
        "summary": "Retrieve form entries or field results with pagination",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the form"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with entries or field results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormSubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/submissions/form/{formId}/field/{fieldId}/answers": {
      "get": {
        "summary": "Get answers for a specific field in a form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Answers for a field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormSubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forms/{formId}/image": {
      "delete": {
        "summary": "Delete form image",
        "description": "Deletes a specific image (e.g., cover or logo) from a form.",
        "tags": [
          "Forms"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "description": "The ID of the form",
            "schema": {
              "type": "string",
              "example": "68a2f03f289425f67c801f18"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteFormImageRequest"
              },
              "example": {
                "image": "cover"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFormImageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Form or image not found"
          }
        }
      }
    }
  }
}